#refs: https://stackoverflow.com/questions/63054331/nginx-remove-single-query-string-parameter
#map $request_uri $newuri {
#    default                                   $request_uri;
#    ~^(?<prefix>.*)apikey=[^&]+(?<suffix>.*)$ $prefix$suffix;
#    ~^(?<prefix>.*)apikey=[^&]+(?<suffix>.*)$ $prefix$suffix;
#}

log_format main1 '$remote_addr -XXX $remote_user [$time_local] '
                '"$masked_request" $status $body_bytes_sent '
                '"$http_referer" "$http_user_agent" "$target" "original_args=$original_args" "args=$args" "api_key=$api_key" ';
server {
    listen       80;
    listen  [::]:80;
    server_name  localhost;


    access_log  /var/log/nginx/access.log  main1;

    #access_log  /var/log/nginx/host.access.log  main;
    #resolver 8.8.8.8;

    location / {
        root   /usr/share/nginx/html;
        index  index.html index.htm;
    }

    location /proxy1/ {

        resolver 8.8.8.8;

        set $original_args $args;
        if ($args ~* (.*[^&]*)(&*address=[^&]*)(.*)) {
            set $target $arg_address;
            set $args $1$3;
            #set $args $1next_page=https%3A$3;
            #rewrite ^.*$ $1 redirect;
        }
        if ($args ~* (.*?[^&]?)(&?apiKey=[^&]*)(.*)) {
            set $args1 $1;
            set $args2 $2;
            set $args3 $3;
            set $api_key $arg_apiKey;
            set $args $1$3;
            #set $args $1next_page=https%3A$3;
            #rewrite ^.*$ $1 redirect;
        }
        proxy_set_header x-target-api-key $api_key;
        proxy_pass $target?$args;
        #set $target $arg_address;
        #if ( $target != "" ) {
        #    #rewrite ^ /?id=true&zone=false break;
        #    proxy_pass $target?abdc=3;
        #}
        #proxy_pass   $arg_target;
    }

    set $masked_request $request;
    if ($masked_request ~* (^.*?/proxy/https?/)(.)([^/]*)(.)/(.*)) {
        set $masked_request $1$2*$4/$5;
    }

    location ~ "/proxy/(http|https)/([^/]{10,})/(.*)" {
        set $original_args $args;
        set $protcol $1;
        set $target $3;
        set $api_key $2;
        resolver 8.8.8.8;
        proxy_set_header x-target-api-key $api_key;
        proxy_pass $protcol://$target?$args;
    }

    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

    # proxy the PHP scripts to Apache listening on 127.0.0.1:80
    #
    #location ~ \.php$ {
    #    proxy_pass   http://127.0.0.1;
    #}

    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    #
    #location ~ \.php$ {
    #    root           html;
    #    fastcgi_pass   127.0.0.1:9000;
    #    fastcgi_index  index.php;
    #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
    #    include        fastcgi_params;
    #}

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    #location ~ /\.ht {
    #    deny  all;
    #}
}